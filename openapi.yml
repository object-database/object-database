openapi: 3.0.1
info:
  title: API
  version: '1.0'
servers:
  - url: http://localhost:5000
    description: "Development"
  - url: https://someserver.projects.bbdgrad.com
    description: "Hosted"  
paths:
  /api/meeting:
    post:
      tags:
        - Meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeeting'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingDto'
        '400':
          description: If something is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMeetingErrors'
    get:
      tags:
        - Meeting
      parameters:
      - name: id
        in: query
        required: true
        description: the internal id of the meeting
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingDto'
        '400':
          description: Error if meeting not found
    delete:
      tags:
        - Meeting
      parameters:
      - name: id
        in: query
        required: true
        description: the internal id of the meeting
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingDto'
        '400':
          description: Error if meeting not found

  /api/meeting/invite:
    post:
      tags:
        - Meeting Invites
      description: Invite users to a meeting, and returns a message warning you if they have been double booked
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingInvite'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingDto'
        '400':
          description: Displays errors about the meeting

  /api/meeting/remove:
    post:
      tags:
        - Meeting Invites
      description: Removes Users from a Meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingInvite'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingDto'
        '400':
          description: Displays errors about the meeting
    
  /api/meeting/all:
    get:
      tags:
        - Meeting
      responses:
        '200':
          description: All meetings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingDto'

  
  /api/user:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      tags:
        - User
      parameters:
      - name: email
        in: query
        required: true
        description: the email of the user
        schema:
          type: string
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Error if user not found
    delete:
      tags: 
        - User
      parameters:
      - name: email
        in: query
        required: true
        description: the email of the user
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteError'

  /api/user/all:
    get:
      tags:
        - User
      responses:
        '200':
          description: All users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /api/reset:
    post:
      tags:
        - Reset
      description: Deletes everything and recreates with dummy data
      responses:
        '200':
          description: Success

components:
  schemas:
    #################### Meetings ####################
    MeetingDto:
      type: object
      required:
        - location
        - meetingStart
        - meetingEnd
      properties:
        _id:
          type: string
        meetingOwner:
          type: string
          example: email@email.com
          description: email of meeting owner
        startTime:
          type: string
          format: date-time
          description: start time of meeting in UTC time
        endTime:
          type: string
          format: date-time
          description: end time of meeting in UTC time
        title:
          type: string
          description: A nice name for the meeting
        attendees:
          $ref: '#/components/schemas/UserEmailArray'
        room:
          $ref: '#/components/schemas/Room'
        teamsLink:
          type: string
      
    CreateMeeting:
      type: object
      required:
        - meetingOwner
        - meetingStart
        - meetingEnd
        - title
      properties:
        meetingOwner:
          type: string
          example: email@email.com
          description: email of meeting owner
        startTime:
          type: string
          format: date-time
          description: start time of meeting in UTC time
        endTime:
          type: string
          format: date-time
          description: end time of meeting in UTC time
        title:
          type: string
          description: A nice name for the meeting
        attendees:
          $ref: '#/components/schemas/UserEmailArray'
        roomId:
          type: string
          description: mutually exclusive with teamsLink
        teamsLink:
          type: string
          description: mutually exclusive with roomId
      
    PostMeetingErrors:
      type: object
      properties:
        errorMessage:
          type: string
          description: Message explaining what's wrong
          enum:
            - Some of your attendees don't exist
            - That time doesn't take up a multiple of 15 minutes
            - End time is before start time
            - Invalid Room
    MeetingInvite:
      type: object
      properties:
        _id:
          type: string
          description: Internal ID of the meeting
        attendees:
          $ref: '#/components/schemas/UserEmailArray'


    #################### Users ####################
    User:
      type: object
      allOf:
      - $ref: '#/components/schemas/UserInfo'
      properties:
        _id:
          type: integer

    UserInfo:
      type: object
      properties:
        email:
          type: string
        name:
          type: string

    UserDeleteError:
      properties:
        errorMessage:
          type: string
          enum:
            - User is part of a meeting
            - Something else

    UserEmailArray:
      type: array
      items: 
        type: string
      example: [meeting@email.com, email@meeting.com]
      description: array of emails of people you want to invite

    #################### Room ####################
    Room:
      type: object
      properties:
        location:
          type: string
        name:
          type: string
        capacity:
          type: integer
        timeSlots:
          type: object
          ## Todo
